<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="com.qainfotech.tap.training.snl.api.BoardTest" tests="1" time="0.037" ignored="10" failures="1" timestamp="04 Jul 2017 06:52:03 GMT" skipped="0" hostname="ASDP1760PO02529" errors="0">
  <testcase name="testLadderOrientation" time="0.037" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.qainfotech.tap.training.snl.api.BoardTest.testLadderOrientation(BoardTest.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
    </failure>
  </testcase> <!-- testLadderOrientation -->
  <testcase name="isPlayerRemoved" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- isPlayerRemoved -->
  <testcase name="IsPlayerClimbLadder" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- IsPlayerClimbLadder -->
  <testcase name="MAXNumberOfExistingPlayers" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- MAXNumberOfExistingPlayers -->
  <testcase name="testSnakeAtBegining" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- testSnakeAtBegining -->
  <testcase name="testValidTurn" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- testValidTurn -->
  <testcase name="testSnakeBite" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- testSnakeBite -->
  <testcase name="testLadderOrSnakeAtFinish" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- testLadderOrSnakeAtFinish -->
  <testcase name="IsAnyPlayersHasSameName" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- IsAnyPlayersHasSameName -->
  <testcase name="testBoardInitialized" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- testBoardInitialized -->
  <testcase name="testFileNotFoundException" classname="com.qainfotech.tap.training.snl.api.BoardTest">
    <skipped/>
  </testcase> <!-- testFileNotFoundException -->
</testsuite> <!-- com.qainfotech.tap.training.snl.api.BoardTest -->
